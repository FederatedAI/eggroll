# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import deepspeed_pb2 as deepspeed__pb2


class DeepspeedRendezvousStoreStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Set = channel.unary_unary(
                '/com.webank.eggroll.core.meta.DeepspeedRendezvousStore/Set',
                request_serializer=deepspeed__pb2.StoreSetRequest.SerializeToString,
                response_deserializer=deepspeed__pb2.StoreSetResponse.FromString,
                )
        self.Get = channel.unary_unary(
                '/com.webank.eggroll.core.meta.DeepspeedRendezvousStore/Get',
                request_serializer=deepspeed__pb2.StoreGetRequest.SerializeToString,
                response_deserializer=deepspeed__pb2.StoreGetResponse.FromString,
                )
        self.Add = channel.unary_unary(
                '/com.webank.eggroll.core.meta.DeepspeedRendezvousStore/Add',
                request_serializer=deepspeed__pb2.StoreAddRequest.SerializeToString,
                response_deserializer=deepspeed__pb2.StoreAddResponse.FromString,
                )
        self.CompareAndSet = channel.unary_unary(
                '/com.webank.eggroll.core.meta.DeepspeedRendezvousStore/CompareAndSet',
                request_serializer=deepspeed__pb2.StoreCompareAndSetRequest.SerializeToString,
                response_deserializer=deepspeed__pb2.StoreCompareAndSetResponse.FromString,
                )
        self.Wait = channel.unary_unary(
                '/com.webank.eggroll.core.meta.DeepspeedRendezvousStore/Wait',
                request_serializer=deepspeed__pb2.StoreWaitRequest.SerializeToString,
                response_deserializer=deepspeed__pb2.StoreWaitResponse.FromString,
                )
        self.NumKeys = channel.unary_unary(
                '/com.webank.eggroll.core.meta.DeepspeedRendezvousStore/NumKeys',
                request_serializer=deepspeed__pb2.StoreNumKeysRequest.SerializeToString,
                response_deserializer=deepspeed__pb2.StoreNumKeysResponse.FromString,
                )
        self.DeleteKey = channel.unary_unary(
                '/com.webank.eggroll.core.meta.DeepspeedRendezvousStore/DeleteKey',
                request_serializer=deepspeed__pb2.StoreDeleteKeyRequest.SerializeToString,
                response_deserializer=deepspeed__pb2.StoreDeleteKeyResponse.FromString,
                )


class DeepspeedRendezvousStoreServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Set(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Add(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CompareAndSet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Wait(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NumKeys(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DeepspeedRendezvousStoreServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Set': grpc.unary_unary_rpc_method_handler(
                    servicer.Set,
                    request_deserializer=deepspeed__pb2.StoreSetRequest.FromString,
                    response_serializer=deepspeed__pb2.StoreSetResponse.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=deepspeed__pb2.StoreGetRequest.FromString,
                    response_serializer=deepspeed__pb2.StoreGetResponse.SerializeToString,
            ),
            'Add': grpc.unary_unary_rpc_method_handler(
                    servicer.Add,
                    request_deserializer=deepspeed__pb2.StoreAddRequest.FromString,
                    response_serializer=deepspeed__pb2.StoreAddResponse.SerializeToString,
            ),
            'CompareAndSet': grpc.unary_unary_rpc_method_handler(
                    servicer.CompareAndSet,
                    request_deserializer=deepspeed__pb2.StoreCompareAndSetRequest.FromString,
                    response_serializer=deepspeed__pb2.StoreCompareAndSetResponse.SerializeToString,
            ),
            'Wait': grpc.unary_unary_rpc_method_handler(
                    servicer.Wait,
                    request_deserializer=deepspeed__pb2.StoreWaitRequest.FromString,
                    response_serializer=deepspeed__pb2.StoreWaitResponse.SerializeToString,
            ),
            'NumKeys': grpc.unary_unary_rpc_method_handler(
                    servicer.NumKeys,
                    request_deserializer=deepspeed__pb2.StoreNumKeysRequest.FromString,
                    response_serializer=deepspeed__pb2.StoreNumKeysResponse.SerializeToString,
            ),
            'DeleteKey': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteKey,
                    request_deserializer=deepspeed__pb2.StoreDeleteKeyRequest.FromString,
                    response_serializer=deepspeed__pb2.StoreDeleteKeyResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.webank.eggroll.core.meta.DeepspeedRendezvousStore', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DeepspeedRendezvousStore(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Set(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.webank.eggroll.core.meta.DeepspeedRendezvousStore/Set',
            deepspeed__pb2.StoreSetRequest.SerializeToString,
            deepspeed__pb2.StoreSetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.webank.eggroll.core.meta.DeepspeedRendezvousStore/Get',
            deepspeed__pb2.StoreGetRequest.SerializeToString,
            deepspeed__pb2.StoreGetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Add(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.webank.eggroll.core.meta.DeepspeedRendezvousStore/Add',
            deepspeed__pb2.StoreAddRequest.SerializeToString,
            deepspeed__pb2.StoreAddResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CompareAndSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.webank.eggroll.core.meta.DeepspeedRendezvousStore/CompareAndSet',
            deepspeed__pb2.StoreCompareAndSetRequest.SerializeToString,
            deepspeed__pb2.StoreCompareAndSetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Wait(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.webank.eggroll.core.meta.DeepspeedRendezvousStore/Wait',
            deepspeed__pb2.StoreWaitRequest.SerializeToString,
            deepspeed__pb2.StoreWaitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NumKeys(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.webank.eggroll.core.meta.DeepspeedRendezvousStore/NumKeys',
            deepspeed__pb2.StoreNumKeysRequest.SerializeToString,
            deepspeed__pb2.StoreNumKeysResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.webank.eggroll.core.meta.DeepspeedRendezvousStore/DeleteKey',
            deepspeed__pb2.StoreDeleteKeyRequest.SerializeToString,
            deepspeed__pb2.StoreDeleteKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
