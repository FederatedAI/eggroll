"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file

Copyright 2019 The Eggroll Authors. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""
import basic_meta_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _Operation:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _OperationEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Operation.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    START: _Operation.ValueType  # 0
    RUN: _Operation.ValueType  # 1
    STOP: _Operation.ValueType  # 2
    KILL: _Operation.ValueType  # 3
    GET_DATA: _Operation.ValueType  # 4
    PUT_DATA: _Operation.ValueType  # 5

class Operation(_Operation, metaclass=_OperationEnumTypeWrapper):
    """returned by service heartbeat to decide next operation"""

START: Operation.ValueType  # 0
RUN: Operation.ValueType  # 1
STOP: Operation.ValueType  # 2
KILL: Operation.ValueType  # 3
GET_DATA: Operation.ValueType  # 4
PUT_DATA: Operation.ValueType  # 5
global___Operation = Operation

@typing_extensions.final
class Model(google.protobuf.message.Message):
    """metadata of event"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    DATAKEY_FIELD_NUMBER: builtins.int
    name: builtins.str
    dataKey: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        dataKey: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataKey", b"dataKey", "name", b"name"]) -> None: ...

global___Model = Model

@typing_extensions.final
class Task(google.protobuf.message.Message):
    """metadata of task"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TASKID_FIELD_NUMBER: builtins.int
    MODEL_FIELD_NUMBER: builtins.int
    taskId: builtins.str
    @property
    def model(self) -> global___Model: ...
    def __init__(
        self,
        *,
        taskId: builtins.str = ...,
        model: global___Model | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["model", b"model"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model", b"model", "taskId", b"taskId"]) -> None: ...

global___Task = Task

@typing_extensions.final
class Topic(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    PARTYID_FIELD_NUMBER: builtins.int
    ROLE_FIELD_NUMBER: builtins.int
    CALLBACK_FIELD_NUMBER: builtins.int
    name: builtins.str
    partyId: builtins.str
    role: builtins.str
    @property
    def callback(self) -> basic_meta_pb2.Endpoint:
        """implication of pub/sub model, necessary for http-based senario"""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        partyId: builtins.str = ...,
        role: builtins.str = ...,
        callback: basic_meta_pb2.Endpoint | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["callback", b"callback"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["callback", b"callback", "name", b"name", "partyId", b"partyId", "role", b"role"]) -> None: ...

global___Topic = Topic

@typing_extensions.final
class Command(google.protobuf.message.Message):
    """task admin command"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name"]) -> None: ...

global___Command = Command

@typing_extensions.final
class Conf(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OVERALLTIMEOUT_FIELD_NUMBER: builtins.int
    COMPLETIONWAITTIMEOUT_FIELD_NUMBER: builtins.int
    PACKETINTERVALTIMEOUT_FIELD_NUMBER: builtins.int
    MAXRETRIES_FIELD_NUMBER: builtins.int
    overallTimeout: builtins.int
    """total timeout, in ms"""
    completionWaitTimeout: builtins.int
    """timeout for waiting for complete, in ms"""
    packetIntervalTimeout: builtins.int
    """timeout for packet interval, in ms"""
    maxRetries: builtins.int
    def __init__(
        self,
        *,
        overallTimeout: builtins.int = ...,
        completionWaitTimeout: builtins.int = ...,
        packetIntervalTimeout: builtins.int = ...,
        maxRetries: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["completionWaitTimeout", b"completionWaitTimeout", "maxRetries", b"maxRetries", "overallTimeout", b"overallTimeout", "packetIntervalTimeout", b"packetIntervalTimeout"]) -> None: ...

global___Conf = Conf

@typing_extensions.final
class Metadata(google.protobuf.message.Message):
    """metadata used for network data transfer"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TASK_FIELD_NUMBER: builtins.int
    SRC_FIELD_NUMBER: builtins.int
    DST_FIELD_NUMBER: builtins.int
    COMMAND_FIELD_NUMBER: builtins.int
    OPERATOR_FIELD_NUMBER: builtins.int
    SEQ_FIELD_NUMBER: builtins.int
    ACK_FIELD_NUMBER: builtins.int
    CONF_FIELD_NUMBER: builtins.int
    EXT_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    @property
    def task(self) -> global___Task:
        """task description"""
    @property
    def src(self) -> global___Topic:
        """source topic"""
    @property
    def dst(self) -> global___Topic:
        """destincation topic"""
    @property
    def command(self) -> global___Command:
        """task managing command (if any)"""
    operator: builtins.str
    """model operator"""
    seq: builtins.int
    """stream seq (reserved)"""
    ack: builtins.int
    """stream ack (reserved)"""
    @property
    def conf(self) -> global___Conf:
        """operation config"""
    ext: builtins.bytes
    version: builtins.str
    def __init__(
        self,
        *,
        task: global___Task | None = ...,
        src: global___Topic | None = ...,
        dst: global___Topic | None = ...,
        command: global___Command | None = ...,
        operator: builtins.str = ...,
        seq: builtins.int = ...,
        ack: builtins.int = ...,
        conf: global___Conf | None = ...,
        ext: builtins.bytes = ...,
        version: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["command", b"command", "conf", b"conf", "dst", b"dst", "src", b"src", "task", b"task"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ack", b"ack", "command", b"command", "conf", b"conf", "dst", b"dst", "ext", b"ext", "operator", b"operator", "seq", b"seq", "src", b"src", "task", b"task", "version", b"version"]) -> None: ...

global___Metadata = Metadata

@typing_extensions.final
class Data(google.protobuf.message.Message):
    """includes key and value field, supporting sequential and random data transfer"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    key: builtins.str
    """compatible with list / dict"""
    value: builtins.bytes
    """actual value"""
    def __init__(
        self,
        *,
        key: builtins.str = ...,
        value: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

global___Data = Data

@typing_extensions.final
class Packet(google.protobuf.message.Message):
    """data streaming packet"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    BODY_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> global___Metadata:
        """packet header"""
    @property
    def body(self) -> global___Data:
        """packet body"""
    def __init__(
        self,
        *,
        header: global___Metadata | None = ...,
        body: global___Data | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["body", b"body", "header", b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["body", b"body", "header", b"header"]) -> None: ...

global___Packet = Packet

@typing_extensions.final
class HeartbeatResponse(google.protobuf.message.Message):
    """response of heartbeat"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    OPERATION_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> global___Metadata: ...
    operation: global___Operation.ValueType
    def __init__(
        self,
        *,
        header: global___Metadata | None = ...,
        operation: global___Operation.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header", b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header", b"header", "operation", b"operation"]) -> None: ...

global___HeartbeatResponse = HeartbeatResponse

@typing_extensions.final
class PollingFrame(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METHOD_FIELD_NUMBER: builtins.int
    SEQ_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    PACKET_FIELD_NUMBER: builtins.int
    DESC_FIELD_NUMBER: builtins.int
    method: builtins.str
    seq: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def packet(self) -> global___Packet: ...
    desc: builtins.str
    def __init__(
        self,
        *,
        method: builtins.str = ...,
        seq: builtins.int = ...,
        metadata: global___Metadata | None = ...,
        packet: global___Packet | None = ...,
        desc: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata", "packet", b"packet"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["desc", b"desc", "metadata", b"metadata", "method", b"method", "packet", b"packet", "seq", b"seq"]) -> None: ...

global___PollingFrame = PollingFrame
